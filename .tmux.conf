#                                                                                                                                                                                  
# emulate screen's c-a c-a command to switch back and forth betwwen two windows
set-option -g prefix C-a 
bind-key C-a last-window
 
# rebind the 'set window title' to the CTLR-A A - same as I have in screen
unbind ,
bind A command-prompt -I "#W" "rename-window -- '%%'"
 
# increase scroll-back buffer
set -g history-limit 100000
 
# put a title on splits
set -g pane-border-status top 
set -g pane-border-format "#{pane_index} #{pane_current_path} #{pane_current_command}"
 
# or better yet :
 
set -g pane-border-status bottom
# set -g pane-border-format '#(sh ~/.dotfiles/pane-border-format.sh \
#   --pane-current-path=#{pane_current_path} \
#   --pane-active=#{pane_active})'
set -g pane-border-format '#(whoami) @ #(hostname)'
set -s status-interval 1
#
#  
##############
# # decrease command delay (increases vim responsiveness)
set -sg escape-time 1
 
# increase repeat time for repeatable commands
set -g repeat-time 1000
 
# start window index at 1
set -g base-index 0
 
# start pane index at 1
setw -g pane-base-index 0
 
 
# Alt arrow to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
 
# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window
 
# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on
 
# re-number windows when one is closed
set -g renumber-windows off 
 
# gist.github.com/andreyvit/2921703
 
# Setting the prefix from C-b to C-a
set -g prefix C-a 
 
# remap prefix to Control + a
set -g prefix C-A 
 
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
 
run-shell 'powerline-config tmux setup'
set-window-option -g mode-keys vi
 
# Free the original Ctrl-b prefix keybinding
unbind C-b 
 
#setting the delay between prefix and command
set -s escape-time 5
 
# Set bind key to reload configuration file
bind r source-file ~/.tmux.conf \; display "Reloaded!"
 
# Set vi as the default editor
set -g status-keys vi
 
# Set different background color for active window
set -g window-status-current-bg magenta
 
# Enable mouse support. Press SHIFT to disable the mouse and now you can copy as if Tmux doesn't exist! :)
# https://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/
set -g mouse on
 
# window splitting
unbind %
bind | split-window -h
unbind '"' 
bind - split-window -v
 
# quickly switch panes
unbind ^J
bind ^J select-pane -t :.+ 
 
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
 
 
# force a reload of the config file
unbind r
# bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind r source-file /etc/tmux.conf \; display "Reloaded!"                                                                                                                                                                                     
 
 ##########################
 # STATUS LINE
 ##########################
source /usr/share/powerline/bindings/tmux/powerline.conf
# show session, window, pane in left status bar
set -g status-left-length 40
set-option -g status-left '#[fg=white]⚡️  #(date) ⚡️ #[fg=green]'
set-option -g status-right '#H #[fg=green]%I:%M #[fg=aqua]%m.%d.%Y'
 
 ###########################
 # Colors
 ###########################
 
 # color status bar
set -g status-bg black
set -g status-fg cyan
 
 
###########################
# OPTIONS and PLUGINS
###########################
 
 
 #######################                                                                                                                                                                                                             
 # SCREENSAVER
 #######################
 
# set -g lock-after-time 600
# set -g lock-command "cmatrix -s -b"
set -g lock-after-time 600
set -g lock-command "tty-clock -Scd 100000000 -C 4"
 
 ######################
 # MAKE SESSIONS "survive" the reboot
 # tmux sessions will be automatically saved every 15 minutes and automatically restored
 # when tmux is started (e.g. after a reboot). You can manually save with `prefix-Ctrl-s`
 # and manually restore with `prefix-Ctrl-r` if desired.
 # see further for restoring the applications as well :
 # https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_programs.md
 ######################
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# Copy to the system clipboard. https://github.com/tmux-plugins/tmux-yank
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
 
 
# use Google to search with tmux-open
set -g @open-S 'https://www.google.com/search?q='
 
# Linux cut-paste clipboard to use
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
# Linux clipboard to use with the mouse
set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'
 
set -g @continuum-restore 'on'
 
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
 
set -g mouse on
